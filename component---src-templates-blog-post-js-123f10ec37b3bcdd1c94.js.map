{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","location","title","_components_SEO__WEBPACK_IMPORTED_MODULE_8__","frontmatter","description","spoiler","slug","fields","style","color","Object","assign","scale","display","marginBottom","rhythm","marginTop","formatPostDate","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","fontFamily","gatsby__WEBPACK_IMPORTED_MODULE_3__","boxShadow","textDecoration","to","_components_Bio__WEBPACK_IMPORTED_MODULE_6__","flexWrap","justifyContent","listStyle","padding","rel","React","Component","pageQuery"],"mappings":"oQAWMA,4FACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYC,IAAIL,KAAKC,MAAO,gCAF3BK,EAGoBN,KAAKC,MAAMM,YAA9BC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KAElB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUd,KAAKC,MAAMa,SAAUC,MAAOX,GAC5CM,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACED,MAAOhB,EAAKkB,YAAYF,MACxBG,YAAanB,EAAKkB,YAAYE,QAC9BC,KAAMrB,EAAKsB,OAAOD,OAEpBV,EAAAC,EAAAC,cAAA,MAAIU,MAAO,CAAEC,MAAO,qBAAuBxB,EAAKkB,YAAYF,OAC5DL,EAAAC,EAAAC,cAAA,KACEU,MAAKE,OAAAC,OAAA,GACAC,aAAM,IADN,CAEHC,QAAS,QACTC,aAAcC,YAAO,GACrBC,UAAWD,aAAO,OAGnBE,YAAehC,EAAKkB,YAAYe,KAAM,MARzC,MASSC,YAAkBlC,EAAKmC,aAEhCxB,EAAAC,EAAAC,cAAA,OAAKuB,wBAAyB,CAAEC,OAAQrC,EAAKsC,QAC7C3B,EAAAC,EAAAC,cAAA,MACEU,MAAO,CACLgB,WAAY,yBACZR,UAAWD,YAAO,OAGpBnB,EAAAC,EAAAC,cAAC2B,EAAA,KAAD,CACEjB,MAAO,CACLkB,UAAW,OACXC,eAAgB,OAChBlB,MAAO,eAETmB,GAAI,KANN,iBAWFhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,MACAjC,EAAAC,EAAAC,cAAA,MACEU,MAAO,CACLK,QAAS,OACTiB,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGXrC,EAAAC,EAAAC,cAAA,UACGJ,GACCE,EAAAC,EAAAC,cAAC2B,EAAA,KAAD,CAAMG,GAAIlC,EAASa,OAAOD,KAAM4B,IAAI,QAApC,KACKxC,EAASS,YAAYF,QAI9BL,EAAAC,EAAAC,cAAA,UACGH,GACCC,EAAAC,EAAAC,cAAC2B,EAAA,KAAD,CAAMG,GAAIjC,EAAKY,OAAOD,KAAM4B,IAAI,QAC7BvC,EAAKQ,YAAYF,MADpB,aA9DiBkC,IAAMC,WAyEtBrD,YAER,IAAMsD,EAAS","file":"component---src-templates-blog-post-js-123f10ec37b3bcdd1c94.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport '../fonts/fonts-post.css';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\nimport { rhythm, scale } from '../utils/typography';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    const { previous, next } = this.props.pageContext;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n        />\n        <h1 style={{ color: 'var(--textTitle)' }}>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: 'block',\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-4 / 5),\n          }}\n        >\n          {formatPostDate(post.frontmatter.date, 'zh')}\n          {` • ${formatReadingTime(post.timeToRead)}`}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <h3\n          style={{\n            fontFamily: 'Montserrat, sans-serif',\n            marginTop: rhythm(0.25),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'var(--pink)',\n            }}\n            to={'/'}\n          >\n            Jamie's Blog\n          </Link>\n        </h3>\n        <Bio />\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n      }\n      fields {\n        slug\n        langKey\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}