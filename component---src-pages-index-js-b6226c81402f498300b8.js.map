{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/pages/index.js"],"names":["React","Component","BlogIndex","render","siteTitle","get","this","posts","filter","_ref","node","fields","langKey","react_default","a","createElement","Layout","location","props","title","SEO","Bio","map","_ref2","slug","key","style","fontFamily","fontSize","rhythm","marginBottom","gatsby_browser_entry","boxShadow","to","formatPostDate","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","pageQuery"],"mappings":"uMAIqBA,IAAMC,8DCOrBC,4FACJC,OAAA,WACE,IAAMC,EAAYC,IAAIC,KAAM,sCAKtBC,GAJkBF,IACtBC,KACA,4CAEYD,IAAIC,KAAM,sCAAsCE,OAC5D,SAAAC,GAAA,MAAsC,OAAtCA,EAAGC,KAAgBC,OAAOC,WAG5B,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUX,KAAKY,MAAMD,SAAUE,MAAOf,GAC5CS,EAAAC,EAAAC,cAACK,EAAA,EAAD,MACAP,EAAAC,EAAAC,cAACM,EAAA,EAAD,MACCd,EAAMe,IAAI,SAAAC,GAAc,IAAXb,EAAWa,EAAXb,KACNS,EAAQd,IAAIK,EAAM,sBAAwBA,EAAKC,OAAOa,KAC5D,OACEX,EAAAC,EAAAC,cAAA,OAAKU,IAAKf,EAAKC,OAAOa,MACpBX,EAAAC,EAAAC,cAAA,MACEW,MAAO,CACLC,WAAY,yBACZC,SAAUC,YAAO,GACjBC,aAAcD,YAAO,OAGvBhB,EAAAC,EAAAC,cAACgB,EAAA,KAAD,CAAML,MAAO,CAAEM,UAAW,QAAUC,GAAIvB,EAAKC,OAAOa,MACjDL,IAGLN,EAAAC,EAAAC,cAAA,aACGmB,YAAexB,EAAKyB,YAAYC,KAAM,MADzC,MAESC,YAAkB3B,EAAK4B,aAEhCzB,EAAAC,EAAAC,cAAA,KACEwB,wBAAyB,CAAEC,OAAQ9B,EAAKyB,YAAYM,mBAnC5CzC,IAAMC,WA+CjByC,GAFExC,YAEO","file":"component---src-pages-index-js-b6226c81402f498300b8.js","sourcesContent":["import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <a\n          href=\"https://github.com/yzhijun\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Footer from '../components/Footer';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\nimport { rhythm } from '../utils/typography';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    );\n    const posts = get(this, 'props.data.allMarkdownRemark.edges').filter(\n      ({ node }) => node.fields.langKey === 'en'\n    );\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  fontFamily: 'Montserrat, sans-serif',\n                  fontSize: rhythm(1),\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {formatPostDate(node.frontmatter.date, 'zh')}\n                {` â€¢ ${formatReadingTime(node.timeToRead)}`}\n              </small>\n              <p\n                dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n              />\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}